# Generated with gnostic protoc-gen-openapi
{
  openapi: 3.0.3,
  info:
    {
      title: Teaching_module Domain,
      version: v1,
      description: "Skoola Teaching Module Service, Skoola Folder Task Management Service, Skoola Teaching Module Service, Skoola Folder Management Service, Study Material Management Service, Exam Management Service, Skoola Learning Goal Service",
    },
  servers:
    [
      { url: "https://staging-api.skola.co.id" },
      { url: "http://localhost:8080" },
    ],
  paths:
    {
      /v1/teaching-module:
        {
          put:
            {
              tags: [TeachingModuleService],
              summary: Update New Teaching Module,
              description: update new teaching module,
              operationId: TeachingModuleService_UpdateTeachingModule,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/publicTeachingModuleRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicTeachingModuleResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
          post:
            {
              tags: [TeachingModuleService],
              summary: Insert New Teaching Module,
              description: insert new teaching module,
              operationId: TeachingModuleService_CreateTeachingModule,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/publicTeachingModuleRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedTeachingModule",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/teaching-module/approval:
        {
          patch:
            {
              tags: [TeachingModuleService],
              summary: Insert New Teaching Module,
              description: insert new teaching module,
              operationId: TeachingModuleService_ApproveTeachingModule,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/publicApproveteachingModuleRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicTeachingModuleResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/teaching-module/{class_subject_id}":
        {
          get:
            {
              tags: [TeachingModuleService],
              summary: Get teaching Module by class subject id,
              description: get teaching module general infor by class subject id,
              operationId: TeachingModuleService_GetTeachingModuleList,
              parameters:
                [
                  {
                    name: class_subject_id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                  { name: subject_id, in: query, schema: { type: string } },
                  { name: teacher_id, in: query, schema: { type: string } },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicTeachingModuleListResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/teaching-module/{id}":
        {
          delete:
            {
              tags: [TeachingModuleService],
              summary: Delete Teaching Module,
              description: Delete teaching module by ID,
              operationId: TeachingModuleService_DeleteTeachingModule,
              parameters:
                [
                  {
                    name: id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicTeachingModuleResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/teaching-module/{id}/details":
        {
          get:
            {
              tags: [TeachingModuleService],
              summary: Get teaching Module by id,
              description: get teaching module general info by id,
              operationId: TeachingModuleService_GetTeachingModuleDetail,
              parameters:
                [
                  {
                    name: id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedTeachingModule",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/folder-task/task:
        {
          post:
            {
              tags: [FolderTaskService],
              summary: Submit folder task,
              description: submit folder task,
              operationId: FolderTaskService_SubmitFolderTask,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/publicSubmitFolderTaskRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicSubmitFolderTaskResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/folder-task/task/{task_id}/{folder_id}":
        {
          delete:
            {
              tags: [FolderTaskService],
              summary: Delete folder task,
              description: delete folder task using task_id and folder_id,
              operationId: FolderTaskService_DeleteFolderTask,
              parameters:
                [
                  {
                    name: task_id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                  {
                    name: folder_id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicDeleteFolderTaskResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/teaching-module/presigned-url:
        {
          post:
            {
              tags: [UploaderService],
              summary: Create teaching module presigned URLs,
              description: Create an AWS S3 presigned URLs to upload teaching module assets,
              operationId: UploaderService_CreateTeachingModulePresignedPostUrl,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/publicCreateTeachingModulePresignedPostUrlRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicCreateTeachingModulePresignedPostUrlResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/teaching-module-folder:
        {
          post:
            {
              tags: [TeachingModuleFolderService],
              summary: Insert New Learning Goals separate with teaching module folder,
              description: insert new teaching module folder,
              operationId: TeachingModuleFolderService_CreateTeachingModuleFolder,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/sharedTeachingModuleFolder",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicCreateTeachingModuleFolderResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
          patch:
            {
              tags: [TeachingModuleFolderService],
              summary: Update New Learning Goals separate with teaching module folder,
              description: update new teaching module folder,
              operationId: TeachingModuleFolderService_UpdateTeachingModuleFolder,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/sharedTeachingModuleFolder",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicUpdateTeachingModuleFolderResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/teaching-module-folder/{folder_id}":
        {
          delete:
            {
              tags: [TeachingModuleFolderService],
              summary: Delete teaching module folder,
              description: Delete teaching module folder by ID,
              operationId: TeachingModuleFolderService_DeleteTeachingModuleFolder,
              parameters:
                [
                  {
                    name: folder_id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicDeleteTeachingModuleFolderResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/teaching-module-folder/{id}":
        {
          get:
            {
              tags: [TeachingModuleFolderService],
              summary: get folder detail by id,
              description: get folder detail by id,
              operationId: TeachingModuleFolderService_GetTeachingModuleDetailByID,
              parameters:
                [
                  {
                    name: id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicGetTeachingModuleFolderDetailByIDResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/teaching-module-folder/{teaching_module_id}/{class_group_detail_id}":
        {
          get:
            {
              tags: [TeachingModuleFolderService],
              summary: get folder list by class group detail ID,
              description: get folder list by class group detail ID,
              operationId: TeachingModuleFolderService_GetTeachingModuleFolderList,
              parameters:
                [
                  {
                    name: teaching_module_id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                  {
                    name: class_group_detail_id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicGetTeachingModuleFolderListResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/study-material:
        {
          post:
            {
              tags: [StudyMaterialService],
              summary: Create new study material,
              description: Creates a new study material and associates it with a folder.,
              operationId: StudyMaterialService_CreateStudyMaterial,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/publicCreateStudyMaterialRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicCreateStudyMaterialResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
          patch:
            {
              tags: [StudyMaterialService],
              summary: Update existing study material,
              description: Updates an existing study material.,
              operationId: StudyMaterialService_UpdateStudyMaterial,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/publicUpdateStudyMaterialRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicUpdateStudyMaterialResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/study-material/list:
        {
          post:
            {
              tags: [StudyMaterialService],
              summary: Get study materials by teaching module ID and class subject ID,
              description: Retrieves a list of study materials associated with the specified teaching module ID and class subject ID.,
              operationId: StudyMaterialService_GetStudyMaterialByParam,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/publicGetStudyMaterialByTeachingModuleAndClassSubjectRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicGetStudyMaterialByTeachingModuleAndClassSubjectResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/study-material/{folder_id}":
        {
          get:
            {
              tags: [StudyMaterialService],
              summary: Get study materials by folder ID,
              description: Retrieves a list of study materials associated with the specified folder ID.,
              operationId: StudyMaterialService_GetStudyMaterialByFolderID,
              parameters:
                [
                  {
                    name: folder_id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicGetStudyMaterialByFolderIDResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/study-material/{id}":
        {
          delete:
            {
              tags: [StudyMaterialService],
              summary: Delete study material,
              description: Deletes a study material by its ID.,
              operationId: StudyMaterialService_DeleteStudyMaterial,
              parameters:
                [
                  {
                    name: id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicDeleteStudyMaterialResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/study-material/{id}/detail":
        {
          get:
            {
              tags: [StudyMaterialService],
              summary: Get study material detail,
              description: Retrieves the details of a specific study material by its ID.,
              operationId: StudyMaterialService_GetStudyMaterialDetail,
              parameters:
                [
                  {
                    name: id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicGetStudyMaterialDetailResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/exam:
        {
          post:
            {
              tags: [ExamService],
              summary: Create new exam,
              description: Creates a new exam.,
              operationId: ExamService_CreateExam,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/publicCreateExamRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicCreateExamResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
          patch:
            {
              tags: [ExamService],
              summary: Update existing exam,
              description: Updates an existing exam.,
              operationId: ExamService_UpdateExam,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/publicUpdateExamRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicUpdateExamResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/exam/type:
        {
          get:
            {
              tags: [ExamService],
              summary: Get an exam by their type,
              description: Get exam by specified exam type and class subject id,
              operationId: ExamService_GetExamByType,
              parameters:
                [
                  {
                    name: exam_type,
                    in: query,
                    schema:
                      {
                        enum: [FINAL_EXAM, MIDTERM_EXAM],
                        type: string,
                        format: enum,
                      },
                  },
                  {
                    name: class_subject_id,
                    in: query,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicGetExamByTypeResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/exam/{id}":
        {
          get:
            {
              tags: [ExamService],
              summary: Get an exam,
              description: Get exam by id,
              operationId: ExamService_GetExamById,
              parameters:
                [
                  {
                    name: id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicGetExamByIdResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
          delete:
            {
              tags: [ExamService],
              summary: Delete exam,
              description: Deletes an exam by its ID.,
              operationId: ExamService_DeleteExam,
              parameters:
                [
                  {
                    name: id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicDeleteExamResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/learning-goal:
        {
          post:
            {
              tags: [LearningGoalService],
              summary: Insert New Learning Goals separate with teaching modules,
              description: insert new learning goal,
              operationId: LearningGoalService_CreateLearningGoals,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/publicCreateLearningGoalsRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicCreateLearningGoalResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
          patch:
            {
              tags: [LearningGoalService],
              summary: Insert New Learning Goals separate with teaching modules,
              description: insert new learning goal,
              operationId: LearningGoalService_UpdateLearningGoal,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/publicUpdateLearningGoalRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicUpdateLearningGoalResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
    },
  "components":
    {
      "schemas":
        {
          publicApproveteachingModuleRequest:
            {
              type: object,
              properties:
                {
                  teaching_module_id:
                    { type: string, description: teaching module id },
                  teacher_id: { type: string, description: teacher id },
                  is_approved: { type: boolean, description: approval request },
                },
            },
          publicTeachingModuleListResponse:
            {
              type: object,
              properties:
                {
                  teaching_modules:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedTeachingModule",
                        },
                      description: Teaching Module Body,
                    },
                },
            },
          publicTeachingModuleRequest:
            {
              type: object,
              properties:
                {
                  teaching_module:
                    {
                      $ref: "#/components/schemas/sharedTeachingModule",
                    },
                },
            },
          publicTeachingModuleResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Teaching Module Response Message,
                    },
                },
            },
          sharedApprover:
            {
              type: object,
              properties:
                {
                  teacher_id:
                    {
                      type: string,
                      description: Teacher who approve new teaching module,
                    },
                  is_approved: { type: boolean, description: approve status },
                },
            },
          sharedComponent:
            {
              type: object,
              properties:
                {
                  id: { type: string, description: header component id },
                  title: { type: string, description: title },
                  curriculum_id: { type: string, description: curriculum id },
                  description:
                    {
                      type: string,
                      description: description header component id,
                    },
                  group_components:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedGroupComponent",
                        },
                      description: group component,
                    },
                },
            },
          sharedContent:
            {
              type: object,
              properties:
                {
                  text:
                    { type: string, description: CurriculumGroupComponentID },
                  value:
                    {
                      type: boolean,
                      description: Curriculum Group Component Description,
                    },
                },
            },
          sharedGroupComponent:
            {
              type: object,
              properties:
                {
                  id: { type: string, description: component id },
                  parent_id:
                    {
                      type: string,
                      description: parent component id from curriculum,
                    },
                  description:
                    {
                      type: string,
                      description: Curriculum Group Component Description,
                    },
                  component_type:
                    {
                      enum:
                        [
                          DEFAULT,
                          MULTIPLE_TEXT_INPUT,
                          TEXT_DESCRIPTION,
                          MULTIPLE_TEXT_DESCRIPTION,
                          CHECKLIST,
                          RADIO_BUTTON,
                          TEXT_INPUT,
                        ],
                      type: string,
                      description: Component type,
                      format: enum,
                    },
                  content:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedContent",
                        },
                      description: list of content,
                    },
                },
            },
          sharedLearningGoal:
            {
              type: object,
              properties:
                {
                  learning_goal_id:
                    { type: string, description: Learning Profile ID },
                  goal: { type: string, description: goal description },
                  teaching_module_id:
                    { type: string, description: teaching module id },
                },
            },
          sharedPercentageScore:
            {
              type: object,
              properties:
                {
                  name: { type: string, description: name of percentage score },
                  value:
                    {
                      type: integer,
                      description: value of percentage score,
                      format: int32,
                    },
                },
            },
          sharedTeachingModule:
            {
              type: object,
              properties:
                {
                  id: { type: string, description: teaching module id },
                  title:
                    { type: string, description: Title for teaching module },
                  learning_profile:
                    {
                      type: array,
                      items: { type: string },
                      description: Learning Profile associated with teaching module,
                    },
                  start_date:
                    {
                      type: string,
                      description: Star Date for teaching module,
                      format: date-time,
                    },
                  end_date:
                    {
                      type: string,
                      description: End Date for teaching module,
                      format: date-time,
                    },
                  subject_id:
                    {
                      type: string,
                      description: Subject id that related teaching module,
                    },
                  approver:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedApprover",
                        },
                      description: List of approver for teaching module,
                    },
                  learning_goals:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedLearningGoal",
                        },
                      description: List of approver for teaching module,
                    },
                  components:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedComponent",
                        },
                      description: Curriculum instance,
                    },
                  created_at:
                    {
                      example: "2020-01-01T00:00:00Z",
                      type: string,
                      description: Time when Curriculum is created,
                      format: date-time,
                    },
                  updated_at:
                    {
                      example: "2020-01-01T00:00:00Z",
                      type: string,
                      description: Time when Curriculum data updated,
                      format: date-time,
                    },
                  cover_image:
                    {
                      type: string,
                      description: Cover Image for teaching module,
                    },
                  time_allocation:
                    {
                      type: string,
                      description: Time allocated for teaching module,
                    },
                  folders:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedTeachingModuleFolder",
                        },
                      description: List of folder for teaching module,
                    },
                  curriculum_id: { type: string, description: curriculum ID },
                  description: { type: string, description: Description },
                  teacher_id: { type: string, description: teacher id },
                  index_minimum:
                    { type: integer, description: teacher id, format: int32 },
                  percentage_score:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedPercentageScore",
                        },
                      description: score percentage,
                    },
                  class_subject_id:
                    { type: string, description: class subject id },
                },
            },
          sharedTeachingModuleFolder:
            {
              type: object,
              properties:
                {
                  folder_id: { type: string, description: Folder ID },
                  title: { type: string, description: Folder Name },
                  learning_goal_ids:
                    {
                      type: array,
                      items: { type: string },
                      description: List of Learning Goals,
                    },
                  start_date:
                    {
                      type: string,
                      description: Start Date,
                      format: date-time,
                    },
                  end_date:
                    { type: string, description: End Date, format: date-time },
                  teaching_module_id:
                    { type: string, description: Teaching Module ID },
                  class_group_detail_id:
                    { type: string, description: class_group_detail_id },
                },
            },
          "v1ErrorResponse":
            {
              "type": "object",
              "properties":
                {
                  "errors":
                    {
                      "title": "errors",
                      "type": "array",
                      "items":
                        { "$ref": "#/components/schemas/v1ErrorInfo" },
                    },
                },
            },
          "v1ErrorInfo":
            {
              "type": "object",
              "properties":
                {
                  "message": { "title": "message", "type": "string" },
                  "code": { "title": "code", "type": "string" },
                  "field": { "title": "field", "type": "string" },
                },
            },
          publicDeleteFolderTaskResponse:
            {
              type: object,
              properties:
                {
                  message:
                    { type: string, description: message for folder task },
                },
            },
          publicSubmitFolderTaskRequest:
            {
              type: object,
              properties:
                {
                  folder_id: { type: string, description: folder id },
                  task_id: { type: string, description: task id },
                  task_type: { type: string, description: task type },
                  task_name: { type: string, description: task name },
                  task_attachment:
                    { type: string, description: task attachment },
                  student_ids:
                    {
                      type: array,
                      items: { type: string },
                      description: student ids,
                    },
                  class_subject_id:
                    { type: string, description: class_subject_id },
                },
            },
          publicSubmitFolderTaskResponse:
            {
              type: object,
              properties:
                {
                  message:
                    { type: string, description: message for folder task },
                },
            },
          v1S3PresignedUrlResponse:
            {
              type: object,
              properties:
                {
                  url: { type: string },
                  values:
                    {
                      $ref: "#/components/schemas/v1S3PresignedValues",
                    },
                },
            },
          v1S3PresignedValues:
            {
              type: object,
              properties:
                {
                  X_Amz_Algorithm: { type: string },
                  X_Amz_Credential: { type: string },
                  X_Amz_Date: { type: string },
                  X_Amz_Signature: { type: string },
                  key: { type: string },
                  policy: { type: string },
                },
            },
          publicCreateTeachingModulePresignedPostUrlRequest:
            {
              type: object,
              properties:
                {
                  files:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedUploader",
                        },
                      description: File data consists of the filename along with its extension and the file size in bytes.,
                    },
                },
            },
          publicCreateTeachingModulePresignedPostUrlResponse:
            {
              type: object,
              properties:
                {
                  presignedUrls:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/v1S3PresignedUrlResponse",
                        },
                      description: Presigned Urls,
                    },
                },
            },
          sharedUploader:
            {
              type: object,
              properties:
                {
                  file_name:
                    { example: 123.png, type: string, description: File name },
                  file_size: { type: string, description: File size in bytes },
                  folder_name:
                    {
                      example: study_material,
                      type: string,
                      description: folder name for files in S3,
                    },
                },
            },
          publicCreateTeachingModuleFolderResponse:
            {
              type: object,
              properties:
                {
                  message:
                    { type: string, description: message for teaching module },
                },
            },
          publicDeleteTeachingModuleFolderResponse:
            {
              type: object,
              properties:
                {
                  success:
                    {
                      type: boolean,
                      description: Whether the folder was successfully deleted,
                    },
                },
            },
          publicGetTeachingModuleFolderDetailByIDResponse:
            {
              type: object,
              properties:
                {
                  folder_id: { type: string, description: Folder ID },
                  title: { type: string, description: Folder Name },
                  learning_goal_ids:
                    {
                      type: array,
                      items: { type: string },
                      description: List of Learning Goals,
                    },
                  start_date:
                    {
                      type: string,
                      description: Start Date,
                      format: date-time,
                    },
                  end_date:
                    { type: string, description: End Date, format: date-time },
                  teaching_module_id:
                    { type: string, description: Teaching Module ID },
                  class_group_detail_id:
                    { type: string, description: class_group_detail_id },
                  folder_tasks:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedFolderTask",
                        },
                      description: data from folder id requested,
                    },
                },
            },
          publicGetTeachingModuleFolderListResponse:
            {
              type: object,
              properties:
                {
                  folders:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedTeachingModuleFolder",
                        },
                      description: get folder by class group detail ID,
                    },
                },
            },
          publicUpdateTeachingModuleFolderResponse:
            {
              type: object,
              properties:
                {
                  message:
                    { type: string, description: message for teaching module },
                },
            },
          sharedFolderTask:
            {
              type: object,
              properties:
                {
                  id: { type: string, description: folder task id },
                  folder_id: { type: string, description: folder id },
                  task_id: { type: string, description: task id },
                  task_type: { type: string, description: task type },
                  task_name: { type: string, description: task name },
                  task_attachment:
                    { type: string, description: task attachment },
                  student_id: { type: string, description: student id },
                  created_at: { type: string, description: created at },
                  updated_at: { type: string, description: updated at },
                },
            },
          v1AttachmentFile:
            {
              type: object,
              properties:
                {
                  display_name: { type: string },
                  unique_name: { type: string },
                  file_extension: { type: string },
                  file_size: { type: string },
                  link: { type: string },
                },
            },
          publicCreateStudyMaterialRequest:
            {
              type: object,
              properties:
                {
                  title:
                    { type: string, description: Title of the study material },
                  instruction:
                    {
                      type: string,
                      description: Instructions related to the study material,
                    },
                  attachment_files:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/v1AttachmentFile",
                        },
                      description: List of attachments associated with the study material,
                    },
                  folder_id:
                    {
                      type: string,
                      description: ID of the folder where the study material is stored,
                    },
                  teaching_module_id:
                    { type: string, description: Teaching Module ID },
                  description:
                    {
                      type: string,
                      description: description from study material,
                    },
                  class_subject_id:
                    { type: string, description: ID of the class subject },
                  subject_id: { type: string, description: ID of the subject },
                  class_group_id:
                    { type: string, description: ID of the class group },
                },
            },
          publicCreateStudyMaterialResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the creation of the study material,
                    },
                  study_material:
                    {
                      $ref: "#/components/schemas/sharedStudyMaterial",
                    },
                },
            },
          publicDeleteStudyMaterialResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the deletion of the study material,
                    },
                },
            },
          publicGetStudyMaterialByFolderIDResponse:
            {
              type: object,
              properties:
                {
                  study_materials:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedStudyMaterial",
                        },
                      description: List of study materials associated with the specified folder,
                    },
                },
            },
          publicGetStudyMaterialByTeachingModuleAndClassSubjectRequest:
            {
              type: object,
              properties:
                {
                  teaching_module_id:
                    {
                      type: string,
                      description: The ID of the teaching module to retrieve study materials for,
                    },
                  class_subject_id:
                    {
                      type: string,
                      description: The ID of the class subject to retrieve study materials for,
                    },
                },
            },
          publicGetStudyMaterialByTeachingModuleAndClassSubjectResponse:
            {
              type: object,
              properties:
                {
                  study_materials:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedStudyMaterial",
                        },
                      description: List of study materials associated with the teaching module and class subject,
                    },
                },
            },
          publicGetStudyMaterialDetailResponse:
            {
              type: object,
              properties:
                {
                  study_material:
                    {
                      $ref: "#/components/schemas/sharedStudyMaterial",
                    },
                },
            },
          publicUpdateStudyMaterialRequest:
            {
              type: object,
              properties:
                {
                  id:
                    {
                      type: string,
                      description: Unique identifier for the study material,
                    },
                  title:
                    { type: string, description: Title of the study material },
                  instruction:
                    {
                      type: string,
                      description: Instructions related to the study material,
                    },
                  attachment_files:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/v1AttachmentFile",
                        },
                      description: List of attachments associated with the study material,
                    },
                  description:
                    {
                      type: string,
                      description: description from study material,
                    },
                },
            },
          publicUpdateStudyMaterialResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the update of the study material,
                    },
                },
            },
          sharedStudyMaterial:
            {
              type: object,
              properties:
                {
                  id:
                    {
                      type: string,
                      description: Unique identifier for the study material,
                    },
                  title:
                    { type: string, description: Title of the study material },
                  instruction:
                    {
                      type: string,
                      description: Instructions related to the study material,
                    },
                  attachment_files:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/v1AttachmentFile",
                        },
                      description: List of attachments associated with the study material,
                    },
                  folder_id:
                    {
                      type: string,
                      description: ID of the folder where the study material is stored,
                    },
                  teaching_module_id:
                    { type: string, description: Teaching Module ID },
                  description:
                    {
                      type: string,
                      description: description from study material,
                    },
                  class_subject_id:
                    { type: string, description: ID of the class subject },
                  subject_id: { type: string, description: ID of the subject },
                  class_group_id:
                    { type: string, description: ID of the class group },
                  created_at:
                    {
                      type: string,
                      description: Timestamp when the study material was created,
                      format: date-time,
                    },
                  updated_at:
                    {
                      type: string,
                      description: Timestamp when the study material was last updated,
                      format: date-time,
                    },
                },
            },
          publicCreateExamRequest:
            {
              type: object,
              properties:
                {
                  title: { type: string, description: Exam Name },
                  learning_goal_ids:
                    {
                      type: array,
                      items: { type: string },
                      description: List of Learning Goal IDs,
                    },
                  start_date:
                    {
                      type: string,
                      description: Start Date,
                      format: date-time,
                    },
                  exam_type:
                    {
                      example: FINAL_EXAM,
                      enum: [FINAL_EXAM, MIDTERM_EXAM],
                      type: string,
                      description: Exam type,
                      format: enum,
                    },
                  class_subject_id:
                    { type: string, description: Class Subject ID },
                  subject_id:
                    {
                      type: string,
                      description: Subject id that related teaching module,
                    },
                  curriculum_id: { type: string, description: Curriculum ID },
                  teacher_user_id:
                    { type: string, description: Teacher User ID },
                  index_minimum:
                    {
                      example: 75.0,
                      type: number,
                      description: Index minimum on scale of 0 to 100,
                      format: float,
                    },
                },
            },
          publicCreateExamResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the creation of the exam,
                    },
                  exam:
                    {
                      $ref: "#/components/schemas/sharedExam",
                    },
                },
            },
          publicDeleteExamResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the deletion of the exam,
                    },
                },
            },
          publicGetExamByIdResponse:
            {
              type: object,
              properties:
                {
                  exam:
                    {
                      $ref: "#/components/schemas/sharedExam",
                    },
                },
            },
          publicGetExamByTypeResponse:
            {
              type: object,
              properties:
                {
                  exam:
                    {
                      $ref: "#/components/schemas/sharedExam",
                    },
                },
            },
          publicUpdateExamRequest:
            {
              type: object,
              properties:
                {
                  id: { type: string, description: Exam ID },
                  title: { type: string, description: Exam Name },
                  learning_goal_ids:
                    {
                      type: array,
                      items: { type: string },
                      description: List of Learning Goal IDs,
                    },
                  start_date:
                    {
                      type: string,
                      description: Start Date,
                      format: date-time,
                    },
                  index_minimum:
                    {
                      example: 75.0,
                      type: number,
                      description: Index minimum on scale of 0 to 100,
                      format: float,
                    },
                },
            },
          publicUpdateExamResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the update of the exam,
                    },
                  exam:
                    {
                      $ref: "#/components/schemas/sharedExam",
                    },
                },
            },
          sharedExam:
            {
              type: object,
              properties:
                {
                  id: { type: string, description: Exam ID },
                  title: { type: string, description: Exam Name },
                  learning_goal_ids:
                    {
                      type: array,
                      items: { type: string },
                      description: List of Learning Goals,
                    },
                  start_date:
                    {
                      type: string,
                      description: Start Date,
                      format: date-time,
                    },
                  exam_type:
                    {
                      example: FINAL_EXAM,
                      enum: [FINAL_EXAM, MIDTERM_EXAM],
                      type: string,
                      description: Exam type,
                      format: enum,
                    },
                  class_subject_id:
                    { type: string, description: Class Subject ID },
                  subject_id:
                    {
                      type: string,
                      description: Subject id that related teaching module,
                    },
                  curriculum_id: { type: string, description: Curriculum ID },
                  teacher_user_id:
                    { type: string, description: Teacher User ID },
                  index_minimum:
                    {
                      example: 75.0,
                      type: number,
                      description: Index minimum on scale of 0 to 100,
                      format: float,
                    },
                  created_at:
                    {
                      example: "2020-01-01T00:00:00Z",
                      type: string,
                      description: Time when exam is created,
                      format: date-time,
                    },
                  updated_at:
                    {
                      example: "2020-01-01T00:00:00Z",
                      type: string,
                      description: Time when exam is updated,
                      format: date-time,
                    },
                },
            },
          publicCreateLearningGoalResponse:
            {
              type: object,
              properties:
                {
                  message:
                    { type: string, description: message for teaching module },
                },
            },
          publicCreateLearningGoalsRequest:
            {
              type: object,
              properties:
                {
                  learning_goals:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedLearningGoal",
                        },
                      description: insert multiple data learning goal,
                    },
                },
            },
          publicUpdateLearningGoalRequest:
            {
              type: object,
              properties:
                {
                  learning_goals:
                    {
                      $ref: "#/components/schemas/sharedLearningGoal",
                    },
                },
            },
          publicUpdateLearningGoalResponse:
            {
              type: object,
              properties:
                {
                  message:
                    { type: string, description: message for teaching module },
                },
            },
        },
      responses:
        {
          "500":
            {
              description: Internal Server Error,
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          $ref: "#/components/schemas/v1ErrorResponse",
                        },
                    },
                },
            },
          "401":
            {
              description: Unauthorized JWT token.,
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          $ref: "#/components/schemas/v1ErrorResponse",
                        },
                    },
                },
            },
        },
      securitySchemes:
        { OAuth2: { type: http, scheme: bearer, bearerFormat: JWT } },
    },
  security: [{ OAuth2: [TEACHER] }],
}
