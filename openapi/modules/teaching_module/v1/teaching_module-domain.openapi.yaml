# Generated with gnostic protoc-gen-openapi
{
  openapi: 3.0.3,
  info:
    {
      title: Teaching_module Domain,
      version: v1,
      description: "Skoola Teaching Module Service, Skoola Learning Goal Service",
    },
  servers: [{ url: "https://api.stg.skola.com" }],
  paths:
    {
      /v1/teaching-module:
        {
          post:
            {
              tags: [TeachingModuleService],
              summary: Insert New Teaching Module,
              description: insert new teaching module,
              operationId: TeachingModuleService_CreateTeachingModule,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/publicTeachingModuleRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicTeachingModuleResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/teaching-module/approval:
        {
          patch:
            {
              tags: [TeachingModuleService],
              summary: Insert New Teaching Module,
              description: insert new teaching module,
              operationId: TeachingModuleService_ApproveTeachingModule,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/publicApproveteachingModuleRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicTeachingModuleResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/teaching-module/{subject_id}":
        {
          get:
            {
              tags: [TeachingModuleService],
              summary: Get teaching Module by subject id,
              description: get teaching module general infor by subject id,
              operationId: TeachingModuleService_GetTeachingModulebySubjectID,
              parameters:
                [
                  {
                    name: subject_id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedTeachingModule",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/teaching-module/learning-goal:
        {
          post:
            {
              tags: [LearningGoalService],
              summary: Insert New Learning Goals separate with teaching modules,
              description: insert new learning goal,
              operationId: LearningGoalService_CreateLearningGoals,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/publicCreateLearningGoalsRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicCreateLearningGoalResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
          patch:
            {
              tags: [LearningGoalService],
              summary: Insert New Learning Goals separate with teaching modules,
              description: insert new learning goal,
              operationId: LearningGoalService_UpdateLearningGoal,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/publicUpdateLearningGoalRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/publicUpdateLearningGoalResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
    },
  "components":
    {
      "schemas":
        {
          publicApproveteachingModuleRequest:
            {
              type: object,
              properties:
                {
                  teaching_module_id:
                    { type: string, description: teaching module id },
                  teacher_id: { type: string, description: teacher id },
                  is_approved: { type: boolean, description: approval request },
                },
            },
          publicTeachingModuleRequest:
            {
              type: object,
              properties:
                {
                  id: { type: string, description: teaching module id },
                  title:
                    { type: string, description: Title for teaching module },
                  description:
                    { type: string, description: "Teaching Module " },
                  start_date:
                    {
                      type: string,
                      description: Star Date for teaching module,
                    },
                  end_date:
                    { type: string, description: End Date for teaching module },
                  components:
                    {
                      type: string,
                      description: Curriculum component for teaching module,
                    },
                  learning_profile:
                    {
                      type: string,
                      description: Learning Profile each teaching module,
                    },
                  subject_id:
                    {
                      type: string,
                      description: Subject id that related teaching module,
                    },
                  approver:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedApprover",
                        },
                      description: List of approver for teaching module,
                    },
                  learning_goals:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedLearningGoal",
                        },
                      description: List of approver for teaching module,
                    },
                },
            },
          publicTeachingModuleResponse:
            {
              type: object,
              properties:
                {
                  message:
                    { type: string, description: message for teaching module },
                },
            },
          sharedApprover:
            {
              type: object,
              properties:
                {
                  teacher_id:
                    {
                      type: string,
                      description: Teacher who approve new teaching module,
                    },
                  is_approved: { type: boolean, description: approve status },
                },
            },
          sharedLearningGoal:
            {
              type: object,
              properties:
                {
                  learning_goal_id:
                    { type: string, description: Learning Profile ID },
                  goal: { type: string, description: goal description },
                  teaching_module_id:
                    { type: string, description: teaching module id },
                },
            },
          sharedTeachingModule:
            {
              type: object,
              properties:
                {
                  id: { type: string, description: teaching module id },
                  subject_id: { type: string, description: subject id },
                  title:
                    { type: string, description: title from teaching module },
                  description:
                    {
                      type: string,
                      description: description from teaching module,
                    },
                },
            },
          "v1ErrorResponse":
            {
              "type": "object",
              "properties":
                {
                  "errors":
                    {
                      "title": "errors",
                      "type": "array",
                      "items":
                        { "$ref": "#/components/schemas/v1ErrorInfo" },
                    },
                },
            },
          "v1ErrorInfo":
            {
              "type": "object",
              "properties":
                {
                  "message": { "title": "message", "type": "string" },
                  "code": { "title": "code", "type": "string" },
                  "field": { "title": "field", "type": "string" },
                },
            },
          publicCreateLearningGoalResponse:
            {
              type: object,
              properties:
                {
                  message:
                    { type: string, description: message for teaching module },
                },
            },
          publicCreateLearningGoalsRequest:
            {
              type: object,
              properties:
                {
                  learning_goals:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedLearningGoal",
                        },
                      description: insert multiple data learning goal,
                    },
                },
            },
          publicUpdateLearningGoalRequest:
            {
              type: object,
              properties:
                {
                  learning_goals:
                    {
                      $ref: "#/components/schemas/sharedLearningGoal",
                    },
                },
            },
          publicUpdateLearningGoalResponse:
            {
              type: object,
              properties:
                {
                  message:
                    { type: string, description: message for teaching module },
                },
            },
        },
      responses:
        {
          "500":
            {
              description: Internal Server Error,
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          $ref: "#/components/schemas/v1ErrorResponse",
                        },
                    },
                },
            },
          "401":
            {
              description: Unauthorized JWT token.,
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          $ref: "#/components/schemas/v1ErrorResponse",
                        },
                    },
                },
            },
        },
      securitySchemes:
        { OAuth2: { type: http, scheme: bearer, bearerFormat: JWT } },
    },
}
