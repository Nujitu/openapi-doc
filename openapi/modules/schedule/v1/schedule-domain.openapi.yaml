# Generated with gnostic protoc-gen-openapi
{
  openapi: 3.0.3,
  info:
    {
      title: Schedule Domain,
      version: v1,
      description: "Skoola Schedule Service, Skoola Schedule Service, Skoola Schedule Service, Skoola Schedule Service",
    },
  servers:
    [
      { url: "https://staging-api.skola.co.id" },
      { url: "http://localhost:8080" },
    ],
  paths:
    {
      /v1/event:
        {
          get:
            {
              tags: [EventService],
              summary: Get list of events and schedules by date range,
              description: "Get list of events and schedules by date range, e.g /v1/event?mode=admin&from=2024-09-01&to=2024-09-30 or /v1/event?mode={teacher_id}&from=2024-09-01&to=2024-09-30",
              operationId: EventService_GetEvent,
              parameters:
                [
                  { name: mode, in: query, schema: { type: string } },
                  { name: from, in: query, schema: { type: string } },
                  { name: to, in: query, schema: { type: string } },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedGetEventResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
          post:
            {
              tags: [EventService],
              summary: Insert new event,
              description: Insert new event,
              operationId: EventService_CreateEvent,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/sharedCreateEventRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedCreateEventResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
          patch:
            {
              tags: [EventService],
              summary: Update an event by id,
              description: Update event by id,
              operationId: EventService_UpdateEvent,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/sharedUpdateEventRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedUpdateEventResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/event/{id}":
        {
          delete:
            {
              tags: [EventService],
              summary: Delete an event by id,
              description: Delete an event by id,
              operationId: EventService_DeleteEvent,
              parameters:
                [
                  {
                    name: id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedDeleteEventResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/schedule/day/{day}/teacher":
        {
          get:
            {
              tags: [ScheduleTeacherService],
              summary: Get schedule for teacher for each day,
              description: "Get schedule for teacher for each day, e.g /v1/schedule/day/MONDAY/teacher, /v1/schedule/day/TUESDAY/teacher, /v1/schedule/day/SUNDAY/teacher",
              operationId: ScheduleTeacherService_GetScheduleTeacherByDay,
              parameters:
                [
                  {
                    name: day,
                    in: path,
                    required: true,
                    schema:
                      {
                        enum:
                          [
                            MONDAY,
                            TUESDAY,
                            WEDNESDAY,
                            THURSDAY,
                            FRIDAY,
                            SATURDAY,
                            SUNDAY,
                          ],
                        type: string,
                        format: enum,
                      },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedGetScheduleTeacherByDayResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/schedule/teacher:
        {
          post:
            {
              tags: [ScheduleTeacherService],
              summary: Insert new schedule for teacher,
              description: Insert new schedule for teacher,
              operationId: ScheduleTeacherService_CreateScheduleTeacherByDay,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/sharedCreateScheduleTeacherByDayRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedCreateScheduleTeacherByDayResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
          patch:
            {
              tags: [ScheduleTeacherService],
              summary: Update schedule for teacher,
              description: Update schedule for teacher,
              operationId: ScheduleTeacherService_UpdateScheduleTeacher,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/sharedUpdateScheduleTeacherRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedUpdateScheduleTeacherResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/schedule/teacher/{id}":
        {
          delete:
            {
              tags: [ScheduleTeacherService],
              summary: Delete schedule for teacher,
              description: Delete schedule for teacher,
              operationId: ScheduleTeacherService_DeleteScheduleTeacher,
              parameters:
                [
                  {
                    name: id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedDeleteScheduleTeacherResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/schedule/day/{day}/time/{time_schedule_id}/subject":
        {
          post:
            {
              tags: [SubjectScheduleService],
              summary: Insert new subject schedule,
              description: "Insert new schedule, e.g. /v1/schedule/day/MONDAY/time/231241/subject",
              operationId: SubjectScheduleService_CreateSubjectSchedule,
              parameters:
                [
                  {
                    name: day,
                    in: path,
                    required: true,
                    schema:
                      {
                        enum:
                          [
                            MONDAY,
                            TUESDAY,
                            WEDNESDAY,
                            THURSDAY,
                            FRIDAY,
                            SATURDAY,
                            SUNDAY,
                          ],
                        type: string,
                        format: enum,
                      },
                  },
                  {
                    name: time_schedule_id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/sharedCreateSubjectScheduleRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedCreateSubjectScheduleResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/schedule/day/{day}/student":
        {
          get:
            {
              tags: [ScheduleStudentService],
              summary: Get schedule for student for each day,
              description: "Get schedule for student for each day, e.g /v1/schedule/day/MONDAY/student, /v1/schedule/day/TUESDAY/student, /v1/schedule/day/SUNDAY/student",
              operationId: ScheduleStudentService_GetScheduleStudentByDay,
              parameters:
                [
                  {
                    name: day,
                    in: path,
                    required: true,
                    schema:
                      {
                        enum:
                          [
                            MONDAY,
                            TUESDAY,
                            WEDNESDAY,
                            THURSDAY,
                            FRIDAY,
                            SATURDAY,
                            SUNDAY,
                          ],
                        type: string,
                        format: enum,
                      },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedGetScheduleStudentByDayResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/schedule/student:
        {
          post:
            {
              tags: [ScheduleStudentService],
              summary: Insert new schedule for student,
              description: Insert new schedule for student,
              operationId: ScheduleStudentService_CreateScheduleStudentByDay,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/sharedCreateScheduleStudentByDayRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedCreateScheduleStudentByDayResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
          patch:
            {
              tags: [ScheduleStudentService],
              summary: Update schedule for student,
              description: Update schedule for student,
              operationId: ScheduleStudentService_UpdateScheduleStudent,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/sharedUpdateScheduleStudentRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedUpdateScheduleStudentResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/schedule/student/{id}":
        {
          delete:
            {
              tags: [ScheduleStudentService],
              summary: Delete schedule for student,
              description: Delete schedule for student,
              operationId: ScheduleStudentService_DeleteScheduleStudent,
              parameters:
                [
                  {
                    name: id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedDeleteScheduleStudentResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
    },
  "components":
    {
      "schemas":
        {
          sharedCreateEventRequest:
            {
              type: object,
              properties:
                {
                  name: { type: string, description: Event name },
                  description: { type: string, description: Event description },
                  user_ids:
                    {
                      type: array,
                      items: { type: string },
                      description: List of attendees (user ids),
                    },
                  date: { type: string, description: Event date yyyy-mm-dd },
                  start_time: { type: string, description: Event start time },
                  end_time: { type: string, description: Event end time },
                  activity:
                    {
                      enum:
                        [
                          OTHERS,
                          LEARNING,
                          SCHOOL_EVENT,
                          EXAM,
                          CEREMONY,
                          EXTRACURRICULAR,
                          STAFF_DEVELOPMENT,
                        ],
                      type: string,
                      description: Event activity,
                      format: enum,
                    },
                },
            },
          sharedCreateEventResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the creation of the new event,
                    },
                },
            },
          sharedDeleteEventResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the deleted event,
                    },
                },
            },
          sharedGetEventDetailResponse:
            {
              type: object,
              properties:
                {
                  id: { type: string, description: id of the event },
                  title: { type: string, description: title of the event },
                  description:
                    { type: string, description: description of the event },
                  schedule_type:
                    {
                      example: "e.g. STUDENT, TEACHER, EVENT",
                      type: string,
                      description: description of the event,
                    },
                  start:
                    {
                      example: "2020-01-01T00:00:00Z",
                      type: string,
                      description: start time of event,
                      format: date-time,
                    },
                  end:
                    {
                      example: "2020-01-01T00:00:00Z",
                      type: string,
                      description: end time of event,
                      format: date-time,
                    },
                  detail_activity:
                    { type: string, description: detail activity },
                },
            },
          sharedGetEventResponse:
            {
              type: object,
              properties:
                {
                  events:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedGetEventDetailResponse",
                        },
                      description: list of schedules and events,
                    },
                },
            },
          sharedUpdateEventRequest:
            {
              type: object,
              properties:
                {
                  id: { type: string, description: Event ID },
                  name: { type: string, description: Event name },
                  description: { type: string, description: Event description },
                  user_ids:
                    {
                      type: array,
                      items: { type: string },
                      description: List of attendees (user ids),
                    },
                  date: { type: string, description: Event date yyyy-mm-dd },
                  start_time: { type: string, description: Event start time },
                  end_time: { type: string, description: Event end time },
                  activity:
                    {
                      enum:
                        [
                          OTHERS,
                          LEARNING,
                          SCHOOL_EVENT,
                          EXAM,
                          CEREMONY,
                          EXTRACURRICULAR,
                          STAFF_DEVELOPMENT,
                        ],
                      type: string,
                      description: Event activity,
                      format: enum,
                    },
                },
            },
          sharedUpdateEventResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the update of the event,
                    },
                },
            },
          "v1ErrorResponse":
            {
              "type": "object",
              "properties":
                {
                  "errors":
                    {
                      "title": "errors",
                      "type": "array",
                      "items":
                        { "$ref": "#/components/schemas/v1ErrorInfo" },
                    },
                },
            },
          "v1ErrorInfo":
            {
              "type": "object",
              "properties":
                {
                  "message": { "title": "message", "type": "string" },
                  "code": { "title": "code", "type": "string" },
                  "field": { "title": "field", "type": "string" },
                },
            },
          sharedCreateScheduleTeacherByDayRequest:
            {
              type: object,
              properties:
                {
                  day:
                    {
                      enum:
                        [
                          MONDAY,
                          TUESDAY,
                          WEDNESDAY,
                          THURSDAY,
                          FRIDAY,
                          SATURDAY,
                          SUNDAY,
                        ],
                      type: string,
                      description: "Day e.g. SUNDAY, MONDAY",
                      format: enum,
                    },
                  start_time:
                    { type: string, description: Start time activity },
                  end_time: { type: string, description: End time activity },
                  duty_teachers:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedDutyTeacherDetail",
                        },
                      description: Duty teacher detail,
                    },
                },
            },
          sharedCreateScheduleTeacherByDayResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the creation of the new duty teacher schedule,
                    },
                },
            },
          sharedDeleteScheduleTeacherResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the deleting of the schedule,
                    },
                },
            },
          sharedDutyTeacherDetail:
            {
              type: object,
              properties:
                {
                  id: { type: string, description: Duty teacher name },
                  name: { type: string, description: Duty teacher id },
                },
            },
          sharedGetScheduleTeacherByDayDetailResponse:
            {
              type: object,
              properties:
                {
                  time_schedule_id:
                    { type: string, description: time schedule start time },
                  start_time:
                    { type: string, description: time schedule start time },
                  end_time:
                    { type: string, description: time schedule start time },
                  duty_teachers:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedDutyTeacherDetail",
                        },
                      description: Duty teacher detail,
                    },
                },
            },
          sharedGetScheduleTeacherByDayResponse:
            {
              type: object,
              properties:
                {
                  day:
                    {
                      enum:
                        [
                          MONDAY,
                          TUESDAY,
                          WEDNESDAY,
                          THURSDAY,
                          FRIDAY,
                          SATURDAY,
                          SUNDAY,
                        ],
                      type: string,
                      description: "Day e.g. SUNDAY, MONDAY",
                      format: enum,
                    },
                  schedules:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedGetScheduleTeacherByDayDetailResponse",
                        },
                      description: list of teacher time schedule,
                    },
                },
            },
          sharedUpdateScheduleTeacherRequest:
            {
              type: object,
              properties:
                {
                  id: { type: string, description: Id of the schedule teacher },
                  day:
                    {
                      enum:
                        [
                          MONDAY,
                          TUESDAY,
                          WEDNESDAY,
                          THURSDAY,
                          FRIDAY,
                          SATURDAY,
                          SUNDAY,
                        ],
                      type: string,
                      description: "Day e.g. SUNDAY, MONDAY",
                      format: enum,
                    },
                  start_time:
                    { type: string, description: Start time activity },
                  end_time: { type: string, description: End time activity },
                  duty_teachers:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedDutyTeacherDetail",
                        },
                      description: Duty teacher detail,
                    },
                },
            },
          sharedUpdateScheduleTeacherResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the updating of the schedule,
                    },
                },
            },
          sharedCreateSubjectScheduleRequest:
            {
              type: object,
              properties:
                {
                  day:
                    {
                      enum:
                        [
                          MONDAY,
                          TUESDAY,
                          WEDNESDAY,
                          THURSDAY,
                          FRIDAY,
                          SATURDAY,
                          SUNDAY,
                        ],
                      type: string,
                      description: "Day e.g. SUNDAY, MONDAY",
                      format: enum,
                    },
                  time_schedule_id:
                    { type: string, description: time schedule ID },
                  subject_schedules:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedSubjectSchedule",
                        },
                      description: subject schedule object,
                    },
                },
            },
          sharedCreateSubjectScheduleResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the creation of the new subject schedule,
                    },
                },
            },
          sharedSubjectSchedule:
            {
              type: object,
              properties:
                {
                  id: { type: string, description: subject schedule id },
                  class_group_id: { type: string, description: class group id },
                  class_group_name:
                    { type: string, description: class group name },
                  class_subject_detail_id:
                    { type: string, description: class subject detail id },
                  class_subject_detail_name:
                    { type: string, description: class subject detail name },
                  teacher_id: { type: string, description: teacher id },
                },
            },
          sharedCreateScheduleStudentByDayRequest:
            {
              type: object,
              properties:
                {
                  day:
                    {
                      enum:
                        [
                          MONDAY,
                          TUESDAY,
                          WEDNESDAY,
                          THURSDAY,
                          FRIDAY,
                          SATURDAY,
                          SUNDAY,
                        ],
                      type: string,
                      description: "Day e.g. SUNDAY, MONDAY",
                      format: enum,
                    },
                  start_time:
                    { type: string, description: Start time activity },
                  end_time: { type: string, description: End time activity },
                  activity:
                    {
                      enum:
                        [
                          OTHERS,
                          LEARNING,
                          SCHOOL_EVENT,
                          EXAM,
                          CEREMONY,
                          EXTRACURRICULAR,
                          STAFF_DEVELOPMENT,
                        ],
                      type: string,
                      description: Activity,
                      format: enum,
                    },
                  detail_activity:
                    { type: string, description: Detail activity },
                },
            },
          sharedCreateScheduleStudentByDayResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the creation of the new schedule,
                    },
                },
            },
          sharedDeleteScheduleStudentResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the deleting of the schedule,
                    },
                },
            },
          sharedGetScheduleStudentByDayResponse:
            {
              type: object,
              properties:
                {
                  day:
                    {
                      enum:
                        [
                          MONDAY,
                          TUESDAY,
                          WEDNESDAY,
                          THURSDAY,
                          FRIDAY,
                          SATURDAY,
                          SUNDAY,
                        ],
                      type: string,
                      description: "Day e.g. SUNDAY, MONDAY",
                      format: enum,
                    },
                  time_schedules:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedTimeSchedule",
                        },
                      description: List of time schedule,
                    },
                },
            },
          sharedTimeSchedule:
            {
              type: object,
              properties:
                {
                  time_schedule_id:
                    { type: string, description: time schedule ID },
                  schedule_id: { type: string, description: schedule ID },
                  start_time:
                    { type: string, description: time schedule start time },
                  end_time:
                    { type: string, description: time schedule start time },
                  subject_schedule:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedSubjectSchedule",
                        },
                      description: list subject schedule,
                    },
                  activity:
                    {
                      enum:
                        [
                          OTHERS,
                          LEARNING,
                          SCHOOL_EVENT,
                          EXAM,
                          CEREMONY,
                          EXTRACURRICULAR,
                          STAFF_DEVELOPMENT,
                        ],
                      type: string,
                      description: time schedule activity,
                      format: enum,
                    },
                  duty_teachers:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedDutyTeacherDetail",
                        },
                      description: Duty teacher IDs,
                    },
                },
            },
          sharedUpdateScheduleStudentRequest:
            {
              type: object,
              properties:
                {
                  id: { type: string, description: Id of schedule student },
                  day:
                    {
                      enum:
                        [
                          MONDAY,
                          TUESDAY,
                          WEDNESDAY,
                          THURSDAY,
                          FRIDAY,
                          SATURDAY,
                          SUNDAY,
                        ],
                      type: string,
                      description: "Day e.g. SUNDAY, MONDAY",
                      format: enum,
                    },
                  start_time:
                    { type: string, description: Start time activity },
                  end_time: { type: string, description: End time activity },
                  activity:
                    {
                      enum:
                        [
                          OTHERS,
                          LEARNING,
                          SCHOOL_EVENT,
                          EXAM,
                          CEREMONY,
                          EXTRACURRICULAR,
                          STAFF_DEVELOPMENT,
                        ],
                      type: string,
                      description: Activity,
                      format: enum,
                    },
                },
            },
          sharedUpdateScheduleStudentResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the updating of the schedule,
                    },
                },
            },
        },
      responses:
        {
          "500":
            {
              description: Internal Server Error,
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          $ref: "#/components/schemas/v1ErrorResponse",
                        },
                    },
                },
            },
          "401":
            {
              description: Unauthorized JWT token.,
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          $ref: "#/components/schemas/v1ErrorResponse",
                        },
                    },
                },
            },
        },
      securitySchemes:
        { OAuth2: { type: http, scheme: bearer, bearerFormat: JWT } },
    },
  security: [{ OAuth2: [TEACHER] }],
}
