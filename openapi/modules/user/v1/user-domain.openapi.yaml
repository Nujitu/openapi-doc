# Generated with gnostic protoc-gen-openapi
openapi: 3.0.3
info:
  title: User Domain
  description: "Skoola User Service"
  version: v1
paths:
  /v1/user/invite:
    post:
      tags: [UserService]
      summary: Invite new user
      description: Invite user by email and instance
      operationId: UserService_InviteUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/publicInviteUserRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/publicInviteUserResponse"
        "401":
          description: Unauthorized JWT token. Invalid scopes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ErrorResponse"
        "422":
          description: Unprocessable entity error. Invalid payload from client.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ErrorResponse"
  "/v1/user/list/{instance_id}":
    get:
      tags: [UserService]
      summary: Get user list
      description: Get user list with given parameters
      operationId: UserService_GetUserList
      parameters:
        [
          {
            name: instance_id,
            in: path,
            required: true,
            schema: { type: string },
          },
          { name: name, in: query, schema: { type: string } },
          { name: email, in: query, schema: { type: string } },
          { name: sort, in: query, schema: { type: string } },
          { name: limit, in: query, schema: { type: integer, format: uint32 } },
          {
            name: offset,
            in: query,
            schema: { type: integer, format: uint32 },
          },
        ]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/publicGetUserListResponse"
        "401":
          description: Unauthorized JWT token. Invalid scopes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ErrorResponse"
        "404":
          description: User is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ErrorResponse"
  "/v1/user/{instance_id}":
    get:
      tags: [UserService]
      summary: Get Current User's Detail
      description: Get the login user's Skoola user detail
      operationId: UserService_GetUser
      parameters:
        [
          {
            name: instance_id,
            in: path,
            required: true,
            schema: { type: string },
          },
          { name: user_id, in: query, schema: { type: string } },
          { name: username, in: query, schema: { type: string } },
        ]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/publicGetUserResponse"
        "401":
          description: Unauthorized JWT token. Invalid scopes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ErrorResponse"
        "404":
          description: User is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ErrorResponse"
"components":
  "schemas":
    v1CursorPagination:
      type: object
      properties:
        limit:
          type: integer
          format: uint32
        next_cursor:
          type: string
        prev_cursor:
          type: string
        curr_cursor:
          type: string
    v1OffsetPagination:
      type: object
      properties:
        limit:
          type: integer
          format: uint32
        offset:
          type: integer
          format: uint32
        total:
          type: integer
          format: uint32
    v1ResponseMetadata:
      type: object
      properties:
        offset_pagination:
          $ref: "#/components/schemas/v1OffsetPagination"
        cursor_pagination:
          $ref: "#/components/schemas/v1CursorPagination"
    publicGetUserListResponse:
      type: object
      properties:
        user:
          type: array
          items:
            $ref: "#/components/schemas/sharedUser"
          description: user information
        meta:
          $ref: "#/components/schemas/v1ResponseMetadata"
    publicGetUserResponse:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/sharedUser"
      description: "*\n Represents user's detail"
    publicInviteUserRequest:
      type: object
      properties:
        email:
          type: string
          description: user email
        instance:
          type: string
          description: user instance
        role:
          enum: [STUDENT, PARENT, TEACHER, STAFF, ADMINISTRATOR, SUPERADMIN]
          type: string
          description: user role
          format: enum
      description: Response body of Invite
    publicInviteUserResponse:
      type: object
      properties:
        message:
          type: string
          description: message for inviting result
      description: Response body of Invite
    sharedUser:
      type: object
      properties:
        user_id:
          example: 123
          type: string
          description: User ID
        fullname:
          example: John F. Doe
          type: string
          description: User full name
        username:
          example: JohnFD
          type: string
          description: User username
        phone_number:
          example: +628790909321
          type: string
          description: User phone number
        email:
          example: john.fd@gmail.com
          type: string
          description: User email
        instance_id:
          type: string
          description: Represent school/instance
        created_at:
          example: "2020-01-01T00:00:00Z"
          type: string
          description: Time when user is created
          format: date-time
        updated_at:
          example: "2020-01-01T00:00:00Z"
          type: string
          description: Time when user data updated
          format: date-time
      description: "*\n Represents user's detail"
    "v1ErrorResponse":
      "type": "object"
      "properties":
        "errors":
          "title": "errors"
          "type": "array"
          "items":
            "$ref": "#/components/schemas/v1ErrorInfo"
    "v1ErrorInfo":
      "type": "object"
      "properties":
        "message":
          "title": "message"
          "type": "string"
        "code":
          "title": "code"
          "type": "string"
        "field":
          "title": "field"
          "type": "string"
