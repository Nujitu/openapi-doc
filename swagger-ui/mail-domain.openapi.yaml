# Generated with gnostic protoc-gen-openapi
{
  openapi: 3.0.3,
  info:
    {
      title: Mail Domain,
      version: v1,
      description: "Skoola Mail Service, Skoola Mail Service, Skoola Mail Service, Skoola Mail Service",
    },
  servers:
    [
      { url: "https://staging-api.simbiosa.co.id" },
      { url: "http://localhost:8080" },
    ],
  paths:
    {
      /v1/mail/inbox:
        {
          get:
            {
              tags: [MailInboxService],
              summary: List mail inbox,
              description: List mail inbox,
              operationId: MailInboxService_ListMailInbox,
              parameters:
                [
                  {
                    name: receiver_user_id,
                    in: query,
                    schema: { type: string },
                  },
                  { name: instance_id, in: query, schema: { type: string } },
                  { name: admin, in: query, schema: { type: boolean } },
                  { name: sort, in: query, schema: { type: string } },
                  {
                    name: limit,
                    in: query,
                    schema: { type: integer, format: uint32 },
                  },
                  {
                    name: offset,
                    in: query,
                    schema: { type: integer, format: uint32 },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedListMailInboxResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
          post:
            {
              tags: [MailInboxService],
              summary: Insert new inbox,
              description: Insert new inbox,
              operationId: MailInboxService_CreateMailInbox,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/sharedCreateMailInboxRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedCreateMailInboxResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/mail/inbox/detail/{id}":
        {
          get:
            {
              tags: [MailInboxService],
              summary: Get mail inbox by ID,
              description: Get mail inbox by ID,
              operationId: MailInboxService_GetMailInboxById,
              parameters:
                [
                  {
                    name: id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedGetMailInboxByIdResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/mail/inbox/{id}":
        {
          delete:
            {
              tags: [MailInboxService],
              summary: Delete inbox by id,
              description: Delete inbox by id,
              operationId: MailInboxService_DeleteMailInbox,
              parameters:
                [
                  {
                    name: id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedDeleteMailInboxResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/mail/outgoing:
        {
          get:
            {
              tags: [MailOutgoingService],
              summary: List mail outgoing,
              description: List mail outgoing,
              operationId: MailOutgoingService_ListSentMail,
              parameters:
                [
                  {
                    name: receiver_user_id,
                    in: query,
                    schema: { type: string },
                  },
                  { name: instance_id, in: query, schema: { type: string } },
                  { name: admin, in: query, schema: { type: boolean } },
                  { name: sort, in: query, schema: { type: string } },
                  {
                    name: limit,
                    in: query,
                    schema: { type: integer, format: uint32 },
                  },
                  {
                    name: offset,
                    in: query,
                    schema: { type: integer, format: uint32 },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedListMailOutgoingResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/mail/outgoing/detail/{id}":
        {
          get:
            {
              tags: [MailOutgoingService],
              summary: Get mail outgoing by ID,
              description: Get mail outgoing by ID,
              operationId: MailOutgoingService_GetSentMailById,
              parameters:
                [
                  {
                    name: id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedGetMailOutgoingByIdResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/v1/mail/outgoing/{id}":
        {
          delete:
            {
              tags: [MailOutgoingService],
              summary: Delete sent email by id,
              description: Delete sent email by id,
              operationId: MailOutgoingService_DeleteSentMail,
              parameters:
                [
                  {
                    name: id,
                    in: path,
                    required: true,
                    schema: { type: string },
                  },
                ],
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedDeleteSentMailResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/mail/create-email-template:
        {
          post:
            {
              tags: [SendMailService],
              summary: Create email template,
              description: Create email template,
              operationId: SendMailService_CreateEmailTemplate,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/sharedCreateEmailTemplateRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedCreateEmailTemplateResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/mail/send:
        {
          post:
            {
              tags: [SendMailService],
              summary: Trigger send email,
              description: Trigger send email,
              operationId: SendMailService_SendMail,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/sharedSendMailRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedSendMailResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/mail/send-email-template:
        {
          post:
            {
              tags: [SendMailService],
              summary: Trigger send email,
              description: Trigger send email,
              operationId: SendMailService_SendEmailTemplate,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/sharedSendEmailTemplateRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedSendEmailTemplateResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
      /v1/mail/presigned-url:
        {
          post:
            {
              tags: [MailUploaderService],
              summary: Create mail module presigned URLs,
              description: Create an AWS S3 presigned URLs to upload mail module assets,
              operationId: MailUploaderService_CreateMailModulePresignedPostUrl,
              requestBody:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              $ref: "#/components/schemas/sharedCreateMailModulePresignedPostUrlRequest",
                            },
                        },
                    },
                  required: true,
                },
              responses:
                {
                  "200":
                    {
                      description: OK,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/sharedCreateMailModulePresignedPostUrlResponse",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      description: Internal Server Error,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      description: Unauthorized JWT token.,
                      content:
                        {
                          application/json:
                            {
                              schema:
                                {
                                  $ref: "#/components/schemas/v1ErrorResponse",
                                },
                            },
                        },
                    },
                },
            },
        },
    },
  "components":
    {
      "schemas":
        {
          v1AttachmentFile:
            {
              type: object,
              properties:
                {
                  display_name: { type: string },
                  unique_name: { type: string },
                  file_extension: { type: string },
                  file_size: { type: string },
                  link: { type: string },
                },
            },
          sharedCreateMailInboxRequest:
            {
              type: object,
              properties:
                {
                  no_ref:
                    {
                      example: 001/01/2025,
                      type: string,
                      description: No. Ref.,
                    },
                  date:
                    {
                      example: "2020-01-01T00:00:00Z",
                      type: string,
                      description: Received date,
                      format: date-time,
                    },
                  sender_name:
                    {
                      example: Dinas Pendidikan,
                      type: string,
                      description: Sender of the mail,
                    },
                  receiver_user_ids:
                    {
                      example: { Kepala_sekolah_id: "" },
                      type: array,
                      items: { type: string },
                      description: List of receiver id,
                    },
                  mail_type:
                    {
                      example: Pemintaan Data/Permohonan/Surat Panggilan,
                      type: string,
                      description: Type of the mail,
                    },
                  mail_subject:
                    {
                      example: Undangan mengikuti pelatihan seluruh guru,
                      type: string,
                      description: Subject of the mail,
                    },
                  attachments:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/v1AttachmentFile",
                        },
                      description: List of attachments,
                    },
                  instance_id:
                    { example: 123, type: string, description: Instance ID },
                },
            },
          sharedCreateMailInboxResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the creation of the mail,
                    },
                },
            },
          sharedDeleteMailInboxResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming succeed to delete the mail,
                    },
                },
            },
          sharedGetMailInboxByIdResponse:
            {
              type: object,
              properties:
                {
                  mail:
                    {
                      $ref: "#/components/schemas/sharedMail",
                    },
                },
            },
          sharedListMailInboxResponse:
            {
              type: object,
              properties:
                {
                  mails:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedMail",
                        },
                      description: List of mail,
                    },
                },
            },
          sharedMail:
            {
              type: object,
              properties:
                {
                  id: { type: string, description: ID of the mail },
                  no_ref:
                    {
                      example: 001/01/2025,
                      type: string,
                      description: No. Ref.,
                    },
                  date:
                    {
                      example: "2020-01-01T00:00:00Z",
                      type: string,
                      description: Received date,
                      format: date-time,
                    },
                  from:
                    {
                      example: Dinas Pendidikan,
                      type: string,
                      description: Sender of the mail,
                    },
                  mail_type:
                    {
                      example: Pemintaan Data/Permohonan/Surat Panggilan,
                      type: string,
                      description: Type of the mail,
                    },
                  mail_subject:
                    {
                      example: Undangan mengikuti pelatihan seluruh guru,
                      type: string,
                      description: Subject of the mail,
                    },
                  attachments:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/v1AttachmentFile",
                        },
                      description: List of attachments,
                    },
                  instance_id:
                    { example: 123, type: string, description: Instance ID },
                },
            },
          "v1ErrorResponse":
            {
              "type": "object",
              "properties":
                {
                  "errors":
                    {
                      "title": "errors",
                      "type": "array",
                      "items":
                        { "$ref": "#/components/schemas/v1ErrorInfo" },
                    },
                },
            },
          "v1ErrorInfo":
            {
              "type": "object",
              "properties":
                {
                  "message": { "title": "message", "type": "string" },
                  "code": { "title": "code", "type": "string" },
                  "field": { "title": "field", "type": "string" },
                },
            },
          sharedDeleteSentMailResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming succeed to delete the mail,
                    },
                },
            },
          sharedGetMailOutgoingByIdResponse:
            {
              type: object,
              properties:
                {
                  mail:
                    {
                      $ref: "#/components/schemas/sharedMail",
                    },
                },
            },
          sharedListMailOutgoingResponse:
            {
              type: object,
              properties:
                {
                  mails:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/sharedMail",
                        },
                      description: List of mail,
                    },
                },
            },
          sharedCreateEmailTemplateRequest:
            {
              type: object,
              properties:
                {
                  template_name:
                    {
                      example: Undangan Pelatihan Guru,
                      type: string,
                      description: Name of the email template,
                    },
                  metadata:
                    {
                      example: "<p>Dear Teacher,</p><p>You are invited to attend a training session.</p>",
                      type: object,
                      additionalProperties: { type: string },
                      description: Content of the email template,
                    },
                  content:
                    {
                      example: "<p>Dear Teacher,</p><p>You are invited to attend a training session.</p>",
                      type: string,
                      description: Content of the email template,
                    },
                },
            },
          sharedCreateEmailTemplateResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the creation of the email template,
                    },
                  email_template:
                    {
                      $ref: "#/components/schemas/sharedEmailTemplate",
                    },
                },
            },
          sharedEmailTemplate:
            {
              type: object,
              properties:
                {
                  template_name:
                    {
                      example: Undangan Pelatihan Guru,
                      type: string,
                      description: Name of the email template,
                    },
                  title:
                    {
                      example: Undangan Pelatihan Guru,
                      type: string,
                      description: Title of the email template,
                    },
                  content:
                    {
                      example: "<p>Dear Teacher,</p><p>You are invited to attend a training session.</p>",
                      type: string,
                      description: Content of the email template,
                    },
                  metadata:
                    {
                      example: { "key1": "value1", "key2": "value2" },
                      type: object,
                      additionalProperties: { type: string },
                      description: Data to fill the template,
                    },
                  created_at:
                    {
                      example: "2020-01-01T00:00:00Z",
                      type: string,
                      description: Creation timestamp of the template,
                    },
                  updated_at:
                    {
                      example: "2020-01-02T00:00:00Z",
                      type: string,
                      description: Last update timestamp of the template,
                    },
                },
            },
          sharedSendEmailTemplateRequest:
            {
              type: object,
              properties:
                {
                  template_name:
                    { example: 123, type: string, description: Template Name },
                  metadata:
                    {
                      example: { "key1": "value1", "key2": "value2" },
                      type: object,
                      additionalProperties: { type: string },
                      description: Data to fill the template,
                    },
                  recepients:
                    {
                      example:
                        ["recipient1@example.com", "recipient2@example.com"],
                      type: array,
                      items: { type: string },
                      description: List of recipient email addresses,
                    },
                  cc:
                    {
                      example: ["cc1@example.com", "cc2@example.com"],
                      type: array,
                      items: { type: string },
                      description: List of CC email addresses,
                    },
                  bcc:
                    {
                      example: ["bcc1@example.com", "bcc2@example.com"],
                      type: array,
                      items: { type: string },
                      description: List of BCC email addresses,
                    },
                  attachments:
                    {
                      example: ["/path/to/file1", "/path/to/file2"],
                      type: array,
                      items: { type: string },
                      description: List of attachment file paths,
                    },
                },
            },
          sharedSendEmailTemplateResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the sending of the email template,
                    },
                },
            },
          sharedSendMailRequest:
            {
              type: object,
              properties:
                {
                  no_ref:
                    {
                      example: 001/01/2025,
                      type: string,
                      description: No. Ref.,
                    },
                  date:
                    {
                      example: "2020-01-01T00:00:00Z",
                      type: string,
                      description: Received date,
                      format: date-time,
                    },
                  sender_user_id:
                    {
                      example: Dinas Pendidikan,
                      type: string,
                      description: Sender of the mail,
                    },
                  receiver_user_ids:
                    {
                      example: { Kepala_sekolah_id: "" },
                      type: array,
                      items: { type: string },
                      description: List of receiver id,
                    },
                  mail_type:
                    {
                      example: Pemintaan Data/Permohonan/Surat Panggilan,
                      type: string,
                      description: Type of the mail,
                    },
                  mail_subject:
                    {
                      example: Undangan mengikuti pelatihan seluruh guru,
                      type: string,
                      description: Subject of the mail,
                    },
                  attachments:
                    {
                      type: array,
                      items:
                        {
                          $ref: "#/components/schemas/v1AttachmentFile",
                        },
                      description: List of attachments,
                    },
                  instance_id:
                    { example: 123, type: string, description: Instance ID },
                },
            },
          sharedSendMailResponse:
            {
              type: object,
              properties:
                {
                  message:
                    {
                      type: string,
                      description: Message confirming the creation of the mail,
                    },
                },
            },
          v1S3PresignedUrlResponse:
            {
              type: object,
              properties:
                {
                  url: { type: string },
                  values:
                    {
                      $ref: "#/components/schemas/v1S3PresignedValues",
                    },
                },
            },
          v1S3PresignedValues:
            {
              type: object,
              properties:
                {
                  X_Amz_Algorithm: { type: string },
                  X_Amz_Credential: { type: string },
                  X_Amz_Date: { type: string },
                  X_Amz_Signature: { type: string },
                  key: { type: string },
                  policy: { type: string },
                },
            },
          sharedCreateMailModulePresignedPostUrlRequest:
            {
              type: object,
              properties:
                {
                  files:
                    {
                      $ref: "#/components/schemas/sharedUploader",
                    },
                },
            },
          sharedCreateMailModulePresignedPostUrlResponse:
            {
              type: object,
              properties:
                {
                  presignedUrls:
                    {
                      $ref: "#/components/schemas/v1S3PresignedUrlResponse",
                    },
                },
            },
          sharedUploader:
            {
              type: object,
              properties:
                {
                  file_name: { type: string, description: File Name },
                  file_size: { type: string, description: File Size in bytes },
                },
            },
        },
      responses:
        {
          "500":
            {
              description: Internal Server Error,
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          $ref: "#/components/schemas/v1ErrorResponse",
                        },
                    },
                },
            },
          "401":
            {
              description: Unauthorized JWT token.,
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          $ref: "#/components/schemas/v1ErrorResponse",
                        },
                    },
                },
            },
        },
      securitySchemes:
        { OAuth2: { type: http, scheme: bearer, bearerFormat: JWT } },
    },
  security: [{ OAuth2: [TEACHER] }],
}
